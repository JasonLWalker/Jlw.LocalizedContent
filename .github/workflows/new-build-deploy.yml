name: New Build and Deploy (Alpha)

on:
  workflow_dispatch:
    inputs:
        buildConfig:
            description: 'Build Configuration'
            required: true
            default: 'Debug'
            type: string
        versionPrefix:
            description: 'Version Number'
            required: false
            default: ''
            type: string
        versionSuffix:
            description: 'Version Suffix'
            required: false
            default: '-alpha'
            type: string


jobs:
  build-test-deploy:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
    env:
      BUILD_WORKSPACE_PATH: ${{ github.workspace }}
      INPUT_BUILD_CONFIG: ${{ github.event.inputs.buildConfig }}
      INPUT_VERSION_PREFIX: ${{ github.event.inputs.versionPrefix }}
      INPUT_VERSION_SUFFIX: ${{ github.event.inputs.versionSuffix }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Set version number
        run: |
          ${{ env.BUILD_WORKSPACE_PATH }}/build-scripts/set-version-property.ps1 '${{ env.INPUT_BUILD_CONFIG }}' '${{ env.INPUT_VERSION_SUFFIX }}' '${{ env.INPUT_VERSION_PREFIX }}'
          "BUILD_VERSION=$vPrefix$vSuffix" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "BUILD_VERSION_PREFIX=$vPrefix" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "BUILD_VERSION_SUFFIX=$vSuffix" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh
      #- name: Output environment variables
      #  run: |
      #    Invoke-Expression "dir env:"
      #  shell: pwsh
      - name: Build / Pack
        shell: pwsh
        run: ${{ env.BUILD_WORKSPACE_PATH }}/build-scripts/build.ps1 -buildType '${{ env.INPUT_BUILD_CONFIG }}' -buildSuffix '${{ env.BUILD_VERSION_SUFFIX }}' -buildPrefix '${{ env.BUILD_VERSION_PREFIX }}'
      - name: Test
        shell: pwsh
        run: dotnet test --no-build --no-restore --configuration '${{ env.INPUT_BUILD_CONFIGURATION }}' --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
