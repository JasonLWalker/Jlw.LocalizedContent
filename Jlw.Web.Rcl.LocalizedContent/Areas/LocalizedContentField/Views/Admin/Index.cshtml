@{
    ViewData["Title"] = ViewData["PageTitle"];

    string jsRoot = "LocalizedContent";
    string apiUrl = (string.IsNullOrWhiteSpace(ViewData["apiOverrideUrl"]?.ToString())) ? Url.Action("Index", "Api", new {Area = "LocalizedContentField", groupKey = (string) null, fieldKey = (string) null}) + "/" : ViewData["apiOverrideUrl"]?.ToString();
    string adminUrl = (string.IsNullOrWhiteSpace(ViewData["adminOverrideUrl"]?.ToString())) ? Url.Action("Index", new {Area = "LocalizedContentField", groupKey = (string) null, fieldKey = (string) null}) : ViewData["adminOverrideUrl"]?.ToString();
    string wizardUrl = (string.IsNullOrWhiteSpace(ViewData["wizardOverrideUrl"]?.ToString())) ? Url.Action("Wizard", new {Area = "LocalizedContentField", groupKey = (string) null, fieldKey = (string) null}) : ViewData["wizardOverrideUrl"]?.ToString();
    string emailUrl = (string.IsNullOrWhiteSpace(ViewData["wizardOverrideUrl"]?.ToString())) ? Url.Action("Email", new {Area = "LocalizedContentField", groupKey = (string) null, fieldKey = (string) null}) : ViewData["emailOverrideUrl"]?.ToString();


    if (!(ViewData["Breadcrumb"] is IEnumerable<KeyValuePair<string, string>>))
    {
        var aBreadcrumb = new List<KeyValuePair<string, string>>()
        {
            new KeyValuePair<string, string>(Url.Action("Index", "Home"), "Home"),
            new KeyValuePair<string, string>(Url.Action("Index", "Admin"), "Administration"),
        };
        switch (ViewData["fieldType"]?.ToString()?.ToUpper())
        {
            case "WIZARD":
                aBreadcrumb.Add(new KeyValuePair<string, string>(wizardUrl, ViewData["PageTitle"]?.ToString()));
                break;
            case "EMAIL":
                aBreadcrumb.Add(new KeyValuePair<string, string>(emailUrl, ViewData["PageTitle"]?.ToString()));
                break;
            default:
                new KeyValuePair<string, string>(adminUrl, ViewData["PageTitle"]?.ToString());
                break;
        }
        if (!string.IsNullOrWhiteSpace(ViewData["groupKey"]?.ToString()))
        {
            switch (ViewData["fieldType"]?.ToString()?.ToUpper())
            {
                case "WIZARD":
                    aBreadcrumb.Add(new KeyValuePair<string, string>($"{wizardUrl}/{ViewData["groupKey"]}", ViewData["groupKey"]?.ToString()));
                    break;
                case "EMAIL":
                    aBreadcrumb.Add(new KeyValuePair<string, string>($"{emailUrl}/{ViewData["groupKey"]}", ViewData["groupKey"]?.ToString()));
                    break;
                default:
                    aBreadcrumb.Add(new KeyValuePair<string, string>($"{adminUrl}/{ViewData["groupKey"]}", ViewData["groupKey"]?.ToString()));
                    break;
            }
        }
        if (!string.IsNullOrWhiteSpace(ViewData["parentKey"]?.ToString()))
        {
            aBreadcrumb.Add(new KeyValuePair<string, string>($"{adminUrl}/{ViewData["groupKey"]}/{ViewData["parentKey"]}", ViewData["parentKey"]?.ToString()));
        }

        ViewData["Breadcrumb"] = aBreadcrumb;
    }
}
@section Scripts {
    <script>


    function jlwDefer(fnCb) {
        if (typeof fnCb != 'function')
            return;
        if (window.jQuery && window.jlwUtility) {
            fnCb();
        } else {
            window.setTimeout(function() { jlwDefer(fnCb); }, 50);
        }
    }

    (function(cacheVer) {
        function onPageLoadInit() {
            function fnInit() {
                window.jlwUtility.showPleaseWait();
                $('head').append($('<link rel="stylesheet" type="text/css" />').attr('href', "@Url.Content($"~/{jsRoot}/css/dataTables.bootstrap5.min.css")"));
                $('head').append($('<link rel="stylesheet" type="text/css" />').attr('href', "@Url.Content($"~/{jsRoot}/css/toastr.min.css")"));
                $.when(
                    window.jlwUtility.lazyLoadLibrary(jQuery.fn.DataTable,"@Url.Content($"~/{jsRoot}/js/jquery.dataTables.min.js")"),
                    window.jlwUtility.lazyLoadLibrary(window.libJlwAppBuilder, "@Url.Content($"~/{jsRoot}/js/libJlwAppBuilder.min.js")"),
                    window.jlwUtility.lazyLoadLibrary(window.bootbox, "@Url.Content($"~/{jsRoot}/js/bootbox.min.js")"),
                    window.jlwUtility.lazyLoadLibrary(window.fontawesome, "@Url.Content($"~/{jsRoot}/font-awesome/js/fontawesome.min.js")"),
                    window.jlwUtility.lazyLoadLibrary(window.fontawesome, "@Url.Content($"~/{jsRoot}/font-awesome/js/solid.min.js")"),
                    window.jlwUtility.lazyLoadLibrary(window.toastr, "@Url.Content($"~/{jsRoot}/js/toastr.min.js")")
                ).done(function() {
                    bootbox.setDefaults({ centerVertical: true, scrollable: true });

                    window.jlwLibLocalizedContentField();
                    window.jlwUtility.hidePleaseWait();

                });
            }

            if (typeof window.jlwUtility == 'undefined') {
                window.jlwUtility = new window.libJlwUtility({
                    'cacheVersion': cacheVer,
                    'libPaths': {},
                    'fnInit': window.setTimeout(fnInit, 10)
                });
            } else {
                fnInit();
            }
        };


        if (typeof libJlwUtility == 'undefined') {
            var headTag = document.getElementsByTagName("head")[0];
            var jqTag = document.createElement('script');
            jqTag.type = 'text/javascript';
            jqTag.src = '@Url.Content($"~/{jsRoot}/js/libJlwUtility.min.js")?_v=' + cacheVer;
            jqTag.onload = onPageLoadInit;
            headTag.appendChild(jqTag);
        } else {
            onPageLoadInit();
        }
    })('');
    </script>
}

<div class="col-xs-12">
    <div>
        <button class="float-end btn btn-sm btn-primary btn-newrecord"><span class="fa fa-plus"></span> Add New Record</button>
        <div class="jlw-header h3">
            @ViewData["PageTitle"]
        </div>
    </div>
    <br />
    @Html.PartialAsync("~/Areas/LocalizedContentField/Views/Admin/_DataTableList.cshtml").Result
</div>
<div class="d-none hidden">

    @Html.PartialAsync("~/Areas/LocalizedContentField/Views/Admin/_EditRecord.cshtml").Result

</div>

@Html.PartialAsync("~/Areas/LocalizedContentField/Views/Admin/_DataTableListScript.cshtml").Result
