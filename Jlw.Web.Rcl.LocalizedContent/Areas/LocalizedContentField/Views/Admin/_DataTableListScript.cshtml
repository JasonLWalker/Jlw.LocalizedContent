@{ 
    bool isAdmin = true;
    bool canView = isAdmin || true;
    bool canAdd = isAdmin || true;
    bool canEdit = isAdmin || true;
    bool canDelete = isAdmin || true;
    string apiUrl = (string.IsNullOrWhiteSpace(ViewData["apiOverrideUrl"]?.ToString())) ? Url.Action("Index", "Api", new { Area = "LocalizedContentField", groupKey = (string)null, parentKey = (string)null }) + "/" : ViewData["apiOverrideUrl"]?.ToString();
    string adminUrl = (string.IsNullOrWhiteSpace(ViewData["adminOverrideUrl"]?.ToString())) ? Url.Action("Index",new { Area = "LocalizedContentField", groupKey = (string)null, parentKey = (string)null }) : ViewData["adminOverrideUrl"]?.ToString();
    string adminTextUrl = (string.IsNullOrWhiteSpace(ViewData["adminTextOverrideUrl"]?.ToString())) ? Url.Action("Index", new { Area = "LocalizedContentText", groupKey = (string)null, parentKey = (string)null }) : ViewData["adminTextOverrideUrl"]?.ToString();
    string wizardUrl = (string.IsNullOrWhiteSpace(ViewData["wizardOverrideUrl"]?.ToString())) ? Url.Action("Wizard", new { Area = "LocalizedContentField", groupKey = (string)null, parentKey = (string)null }) : ViewData["wizardOverrideUrl"]?.ToString();
    string emailUrl = (string.IsNullOrWhiteSpace(ViewData["emailOverrideUrl"]?.ToString())) ? Url.Action("Email", new { Area = "LocalizedContentField", groupKey = (string)null, parentKey = (string)null }) : ViewData["wizardOverrideUrl"]?.ToString();
} 
<script>

    if (!window.jlwLibLocalizedContentField) {
        window.jlwLibLocalizedContentField = function() {
            $.fn.dataTable.ext.errMode = 'none';
            var t = new libJlwAppBuilder('@apiUrl', '.jlw-dtlist-localizedcontentfield table.jlw-datatable-localizedcontentfield');

        @if (canEdit) {
        <text>
            t.frmEdit = $('#jlwEditFormLocalizedContentField').html();
            function onEditLanguage(o) {
                var elem = $(o);
                var data = t.getParentData(o);
                window.location = '@adminTextUrl/' + data['GroupKey'] + '/' + data['FieldKey'];
            }

            t.addDtRowButton('', 'btn-localize', '', 'btn-outline-secondary', onEditLanguage);
            t.addDtRowButton('', 'btn-edit', 'fas fa-pencil-alt text-warning', 'btn-outline-secondary', t.onEditRecord);
        </text>}

            t.addDtRowButton('', 'btn-delete', 'fas fa-trash-alt text-danger', 'btn-outline-secondary', t.onDeleteRecord);

            t.fnPostDtAjaxData = function(d) {
                // Add additional parameters here like this:
                // d.SomeParameter = 'SomeValue';
                d.GroupKey = '@(ViewData["groupKey"])';
                //d.FieldKey = '@(ViewData["parentKey"])';
                d.FieldType = '@(ViewData["fieldType"])';
                d.ParentKey = '@(ViewData["parentKey"])';
            }
            t.addDtRenderer(t.dtRenderButtons, [15]);

            t.addDtRenderer(function (data, type, row) {
                switch (row["FieldType"].toUpperCase()) {
                case 'WIZARD':
                case 'EMAIL':
                    return '<a href="@wizardUrl/' + data + '">' + data + '</a>';
                }
                return data;
            }, [1]);
            t.addDtRenderer(function (data, type, row) {
                switch (row["FieldType"].toUpperCase()) {
                case 'WIZARD':
                    return '<a href="@wizardUrl/' + row['GroupKey'] + '/' + data + '">' + data + '</a>';
                case 'EMAIL':
                    return '<a href="@emailUrl/' + row['GroupKey'] + '/' + data + '">' + data + '</a>';
                case 'FORM':
                    return '<a href="@adminUrl/' + row['GroupKey'] + '/' + data + '">' + data + '</a>';
                }
                return data;
            }, [2]);
            var dt = t.initializeDataTable(t.sDtSelector);

            dt.on('error.dt',
                    function(e, settings, techNote, message) {
                        if (console)
                            console.log('An error has been reported by DataTables: ', message);
                    })
                .on('xhr.dt', function ( e, settings, json, xhr ) {
                    var data = xhr["responseJSON"];
                    t.checkAjaxMessage(data);
                })
                .on('draw.dt', function(e, settings) {
                    //console.log(e, settings);
                    var a = $('.btn-localize');
                    a.each(function(i, elem) {
                        var o = $(elem);
                        var data = t.getParentData(o);
                        o.append($('<span class="fa-layers fa-fw"><span class="fas fa-language"></span><span class="fa-layers-counter"  data-fa-transform="shrink-11 up-10 right-10" style="background:#0062cccc; font-size:2rem; top:-5px; right:-5px;">' + data['LocalizedCount'] + '</span></span>'));

                    });
                });



            t.addDtFooterButton(' Add New Record', 'btn-newrecord', 'fa fa-plus', 'btn-primary', t.onAddRecord);
            t.dtRenderFooterButtons();
            $('.btn-newrecord').off('click').on('click', t.onAddRecord);
        }
    }
</script>
